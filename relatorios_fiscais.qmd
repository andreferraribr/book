---
title: "Relatórios Fiscais"
editor: visual
---

## Introdução

## RREO

### Pacotes e Funções

```{r}
# https://kbroman.org/knitr_knutshell/pages/Rmarkdown.html
knitr::opts_chunk$set( echo=FALSE, warning=FALSE, message=FALSE)
```

```{r}
# https://www.r-bloggers.com/the-notin-operator/
'%!in%' <- Negate('%in%')
```

```{r}
library(flexdashboard)
library(shiny)
library(tidyverse)
library(readxl)
library(DT)
library(plotly)
library(lubridate)
library(RcppRoll)
library(scales)
library(ggrepel)
library(forcats)
```

```{r}
tema <- theme_classic() + theme(plot.title=element_text(size=40,hjust = 0.5 ),
          # axis.text = element_text(size = 20),
          axis.text.x = element_text(size=25),
          axis.title.y=element_text(size=25),
          axis.text.y=element_text(size=25),
          axis.ticks.y=element_blank(),
          legend.position = "none")
# https://rpubs.com/mclaire19/ggplot2-custom-themes
# https://bookdown.org/rdpeng/RProgDA/building-a-new-theme.html
# https://themockup.blog/posts/2020-12-26-creating-and-using-custom-ggplot2-themes/
```

```{r}
plot_rolling = function(df){
  ggplot(df ) + 
  
  geom_area(aes(x = (as.Date(mes)),y = acumulado, fill = cores ))+
  # plotar o point da UF selecionada
    # geom_label(label = rcl %>% filter (mes== max(mes)) %>% summarise(acumulado=acumulado))+
    # 
  
  geom_point(data = df%>% filter (mes %in% c(max(mes),max(mes)-years(1))), aes(x=as.Date(mes), y=acumulado),size =7)+
    
   geom_label_repel (size = 8, data = df%>% filter (mes %in% c(max(mes), max(mes)-years(1))), aes(x=as.Date(mes), y=acumulado,label=paste0( prettyNum(round(acumulado,1), big.mark = ".", decimal.mark = ",", nsmall = 1), " (",month(mes,label = TRUE) ,")")))+
    
  
    
  ggtitle(paste0("Posição: ",(month(max(as.Date(df$mes)), label=TRUE, abbr = FALSE)), "/",(year(max(as.Date(df$mes)))) ))+
    theme_classic() +
    ylab("R$ bilhões") +
    xlab("") +
    tema+
    # theme(plot.title=element_text(size=40,hjust = 0.5 ),
    #       # axis.text = element_text(size = 20),
    #       axis.text.x = element_text(size=25),
    #       axis.title.y=element_blank(),
    #       axis.text.y=element_text(size=25),
    #       axis.ticks.y=element_blank(),
    #       legend.position = "none")+
    scale_x_date(limits = c(as.Date (min(df$mes)),as.Date(max(df$mes))) ,breaks=date_breaks("1 year"),
      labels=date_format( "%Y")) +
    scale_fill_manual(values = c(df$cores))
 }
```

```{r}
plot_geral = function(df){
  ggplot(df,aes(x = (as.Date(mes)),y = acumulado) ) + 
  
  geom_line()+
  # plotar o point da UF selecionada
    # geom_label(label = rcl %>% filter (mes== max(mes)) %>% summarise(acumulado=acumulado))+
    # 
  
  geom_point(data = df%>% filter (mes %in% c(max(mes),max(mes)-years(1))), aes(x=as.Date(mes), y=acumulado),size =5)+
    
   geom_label_repel (size = 7, data = df%>% filter (mes %in% c(max(mes), max(mes)-years(1))), aes(x=as.Date(mes), y=acumulado,label=paste0( prettyNum(round(acumulado,0), big.mark = ".", decimal.mark = ","), " (",month(mes,label = TRUE) ,")")))+
    
  
    
  ggtitle(paste0("Posição: ",(month(max(as.Date(df$mes)), label=TRUE, abbr = FALSE)), "/",(year(max(as.Date(df$mes)))) ))+
    tema +
    ylab("R$ bilhões") +
    xlab("") +
    scale_x_date(limits = c(as.Date (min(df$mes)),as.Date(max(df$mes))) ,breaks=date_breaks("1 year"),
      labels=date_format( "%Y"))
 }
```

### Despesa com Educação

Despesa com Educação

```{r}
educacao <- read_excel("coding/rreo/dados_rreo.xlsx", 
    sheet = "educacao", col_types = c("date", 
        "numeric", "numeric", "numeric", 
        "numeric"))

names(educacao)[1] <- "date"
names(educacao)[4] <- "executado"
names(educacao)[5] <- "minimo"



educacao <- educacao %>% mutate (percentual = round(100*executado/minimo), mes = month(date, label = TRUE), ano = year(date))

educacao <- educacao %>% mutate(cores = if_else(percentual>100,"red","blue"))
atual <- educacao %>% filter (date == max(date))

p <- ggplot(educacao, aes(y=percentual, color = cores)) +
  # geom_jitter exclui a UF selecionada para evitar a apresentação de dois pontos para a mesma UF.
  # Caso contrário teríamos um ponto plotado pelo geom_jitter e outro plotado pelo geom_point
    geom_jitter( data = educacao %>% filter (ano != max(ano)), aes(x = mes, text=paste("ANO: ", ano)), width = 0.1, height = 0.1, alpha=0.2) +
  # plotar o point da UF selecionada
    geom_point(data = educacao %>% filter (ano == max(ano)), aes(x=mes, y=percentual,text=paste("ANO: ", ano)))+
  
  # plotar linha vermelha tracejada dividindo resultados bons (azul), ruins (vermelho). O argumento "corte" define a altura da linha.
    geom_hline(yintercept=100, colour = "red", linetype = "dashed") +
  # https://ggplot2.tidyverse.org/reference/geom_smooth.html
  # inherit.aes =FALSE para evitar duas linhas de tendência.
  # Caso contrário teríamos uma linha de tendência para a cada factor level (coluna cores).
  # Uma linha de tendência para os pontos de cor vermelha e outra linha de tendência para os pontos de cor azul  
    geom_smooth( method = "loess", inherit.aes =FALSE,aes(x=mes, y=percentual), color = "gray" )+
  # inherit.aes =FALSE para nao herdar aes do geoms anteriores. Caso contrário a linha teria duas cores
    geom_line(data = educacao %>% filter (ano == max(ano) ),  inherit.aes =FALSE, aes(x=month(as.Date(date)), y=percentual), size = 0.2)+ 
  
   # definir informação dos eixos
    labs( x = "mês",
          y = "%")+
   tema+ 
  # escala de cor. Os levels são definidos na coluna cores da df_limites.
    scale_color_manual(breaks = levels(educacao$cores),
                        values=c("red", "blue"))+
 
  # optei por esconder a legenda (showlegend = FALSE)
geom_text(data = educacao %>% filter (date == max(date)), aes(x=mes, y=percentual+8, label = paste0(round(percentual,1),"%")), size = 4, color = "black", face = "bold")+ 
    theme(plot.title = element_text(size = 12, face = "bold"),
          axis.text.x =  element_text(size = 10),
          axis.text.y =  element_text(size = 10),
          axis.title.x =  element_text(size= 10),
          axis.title.y =  element_text(size= 10))+
  ggtitle ( paste0("Despesa de ",atual$percentual, "% até ", atual$mes, "/", atual$ano))
# (p <- ggplotly(p))%>% layout(showlegend = FALSE)
ggplotly(p)

```

### Despesa com Saúde

```{r}
saude <- read_excel("coding/rreo/dados_rreo.xlsx", 
    sheet = "saude", col_types = c("date", 
        "numeric", "numeric", "numeric", "numeric", 
        "numeric"))

names(saude)[1] <- "date"
names(saude)[2] <- "executado"
names(saude)[5] <- "minimo"



saude <- saude %>% mutate (percentual = round(100*executado/minimo,0), mes = month(date, label = TRUE), ano = year(date))

saude <- saude %>% mutate(cores = if_else(percentual>100,"red","blue"))
atual <- saude %>% filter (date == max(date))

p <- ggplot(saude, aes(y=percentual, color = cores)) +
  # geom_jitter exclui a UF selecionada para evitar a apresentação de dois pontos para a mesma UF.
  # Caso contrário teríamos um ponto plotado pelo geom_jitter e outro plotado pelo geom_point
    geom_jitter( data = saude %>% filter (ano != max(ano)), aes(x = mes, text=paste("ANO: ", ano)), width = 0.1, height = 0.1, alpha=0.2) +
  # plotar o point da UF selecionada
    geom_point(data = saude %>% filter (ano == max(ano)), aes(x=mes, y=percentual,text=paste("ANO: ", ano)))+
  
  # plotar linha vermelha tracejada dividindo resultados bons (azul), ruins (vermelho). O argumento "corte" define a altura da linha.
    geom_hline(yintercept=100, colour = "red", linetype = "dashed") +
  # https://ggplot2.tidyverse.org/reference/geom_smooth.html
  # inherit.aes =FALSE para evitar duas linhas de tendência.
  # Caso contrário teríamos uma linha de tendência para a cada factor level (coluna cores).
  # Uma linha de tendência para os pontos de cor vermelha e outra linha de tendência para os pontos de cor azul  
    geom_smooth( method = "loess", inherit.aes =FALSE,aes(x=mes, y=percentual), color = "gray" )+
  # inherit.aes =FALSE para nao herdar aes do geoms anteriores. Caso contrário a linha teria duas cores
    geom_line(data = saude %>% filter (ano == max(ano) ),  inherit.aes =FALSE, aes(x=month(as.Date(date)), y=percentual), size = 0.2)+ 
  
   # definir informação dos eixos
    labs( x = "mês",
          y = "%")+
   tema+ 
  # escala de cor. Os levels são definidos na coluna cores da df_limites.
    scale_color_manual(breaks = levels(saude$cores),
                        values=c("red", "blue"))+
 
  # optei por esconder a legenda (showlegend = FALSE)
geom_text(data = saude %>% filter (date == max(date)), aes(x=mes, y=percentual+8, label = paste0(round(percentual,1),"%")), size = 4, color = "black", face = "bold")+ 
    theme(plot.title = element_text(size = 12, face = "bold"),
          axis.text.x =  element_text(size = 10),
          axis.text.y =  element_text(size = 10),
          axis.title.x =  element_text(size= 10),
          axis.title.y =  element_text(size= 10))+
  ggtitle ( paste0("Despesa de ",atual$percentual, "% até ", atual$mes, "/", atual$ano))
# (p <- ggplotly(p))%>% layout(showlegend = FALSE)
ggplotly(p)
```

### Receita Corrente Líquida

### Resultado Previdenciário

| Col1 | Col2 | Col3 |
|------|------|------|
|      |      |      |
|      |      |      |
|      |      |      |
|      |      |      |
|      |      |      |
|      |      |      |
|      |      |      |
|      |      |      |
|      |      |      |
|      |      |      |
|      |      |      |
|      |      |      |
|      |      |      |
|      |      |      |
|      |      |      |
|      |      |      |
|      |      |      |
|      |      |      |
|      |      |      |
|      |      |      |
|      |      |      |
|      |      |      |
|      |      |      |
|      |      |      |
|      |      |      |
|      |      |      |
|      |      |      |
|      |      |      |
|      |      |      |
|      |      |      |

### Disponibilidade por Fonte de Recurso

| Col1 | Col2 | Col3 |
|------|------|------|
|      |      |      |
|      |      |      |
|      |      |      |
|      |      |      |
|      |      |      |
|      |      |      |
|      |      |      |
|      |      |      |
|      |      |      |
|      |      |      |
|      |      |      |
|      |      |      |
|      |      |      |
|      |      |      |
|      |      |      |
|      |      |      |
|      |      |      |
|      |      |      |
|      |      |      |
|      |      |      |
|      |      |      |
|      |      |      |
|      |      |      |
|      |      |      |
|      |      |      |
|      |      |      |
|      |      |      |
|      |      |      |
|      |      |      |
|      |      |      |

### Restos a Pagar

## RGF

### Despesa com pessoal

### Dívida

### Operações de Crédito

### 
