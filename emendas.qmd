---
title: "Identificadores de Resultado Primário e o Orçamento Secreto"
editor: visual
format:
  html:
    code-fold: true
    code-summary: "mostrar o código"
    code-overflow: wrap
---

## Debate na mídia

O debate na mídia concede a oportunidade para popularizar conceitos orçamentários. O orçamento secreto esteve presente na narrativa da corrida presidencial e virou manchete nos principais veículos de comunicação. A CNN, por exemplo, ao noticiar o [orçamento secreto](https://www.cnnbrasil.com.br/nacional/saiba-o-que-e-e-como-funciona-o-orcamento-secreto/) trouxe informação sobre os identificadores de resultado primário:

[![Figura 1: Emendas Parlamentares (fonte CNN)](indicador_eof/emendas_cnn.png "Emendas Parlamentares"){fig-alt="Fonte: CNN"}](https://www.cnnbrasil.com.br/nacional/saiba-o-que-e-e-como-funciona-o-orcamento-secreto/)

Aproveitando o interesse público sobre o assunto, neste trabalho nós apresentaremos com mais detalhes os identificadores de resultado primário, a discricionariedade orçamentária, o destino das emendas parlamentares e a defasagem das despesas proveniente das emenda

## Importar e tratar os dados

```{r}
# definir opções para o código
# https://kbroman.org/knitr_knutshell/pages/Rmarkdown.html
knitr::opts_chunk$set( echo=TRUE, warning=FALSE, message=FALSE,tidy = "styler")
options(encoding = "latin1")
```

```{r}
library(tidyverse)
library(readxl)
library(DT)
library(plotly)
library(lubridate)
library(forcats)
library(janitor)
library(stringr)
library(dplyr)
library(ggplot2)
```

Inicialmente importaremos uma planilha com as despesas empenhadas e os pagamentos totais (RP e LOA), detalhada por identificador de resultado primário para o período de 2014 a 2022.

Para facilitar a nossa análise, vamos criar as variáveis "discricionariedade" e "defasagem". A variável "discricionariedade" informa se a despesa é uma discricionariedade do poder Executivo, do Congresso ou se não há discricionariedade, como no caso das despesas financeiras e obrigatórias

A variável "defasagem" é explicada no relatório sobre [restos a pagar](https://andreferrari.quarto.pub/restos_a_pagar.html).

```{r}


# https://www.r-bloggers.com/the-notin-operator/
'%!in%' <- Negate('%in%')

# deixa mais "bonitinho" o nome do identificador
indicador_eof <- read_excel("indicador_eof/indicador_eof.xlsx") %>% clean_names() %>% head(-1) %>%
mutate(tipo = case_when
(codigo == 0 ~  paste0(codigo, "-Financeiro"),
 codigo == 1 ~  paste0(codigo, "-Primário Obrigatório"),
 codigo == 2 ~  paste0(codigo, "-Primário Discricionário"),
 codigo == 3 ~  paste0(codigo, "-Primário Sem Impacto Fiscal"),
 codigo == 6  ~  paste0(codigo, "-Emenda Individual" ),
 codigo == 7  ~  paste0(codigo, "-Emenda de Bancada"),
 codigo == 8  ~  paste0(codigo, "-Emenda de Comissão"),
 codigo == 9  ~  paste0(codigo, "-Emenda de Relator"),))

# criar variável para identificar quem tem a discricionariedade
indicador_eof <- indicador_eof%>%
mutate(discricionario = case_when
(codigo %in% c(0,1,3)  ~  "Não discricionário",
 codigo == 2 ~  "Executivo (Presidente)",
 codigo %in% c(6:9)  ~  "Congresso (Emendas Parlamentares)",
 TRUE ~ "Outros"))

# tratar os NAs
indicador_eof[is.na(indicador_eof)] <- 0

indicador_eof <- indicador_eof %>% filter(ano_lancamento > 2014)

# importar planilha com detalhamento do elemento da despesa e função
eof_elemento <- read_excel("indicador_eof/indicador_eof_elemento_tipo.xlsx", skip = 5) %>% clean_names() %>% head(-1)
eof_elemento <- eof_elemento %>% filter(ano_lancamento > 2014)

# converte NA em zero.
eof_elemento[is.na(eof_elemento)] <- 0

eof_elemento<- eof_elemento%>% rename( "ano_empenho" = "ne_c_cor_ano_emissao" )

eof_elemento <- eof_elemento %>% mutate(tempo = as.integer(ano_lancamento)-as.integer(ano_empenho))

eof_elemento <- eof_elemento %>% mutate (defasagem = case_when(
  tempo == 0 ~ "sem defasagem",
  tempo == 1 ~ "1 ano",
  tempo == 2 ~ "2 anos",
  TRUE ~ "maior que 2 anos"))

eof_elemento <- eof_elemento %>%  mutate (defasagem = fct_reorder(defasagem, tempo))


```

## Identificador de Resultado Primário

Os identificadores de resultado primário demonstram a imensa rigidez do orçamento da união. Aproximadamente 95% do orçamento é destinado para despesas obrigatórias (por exemplo, despesa com aposentadorias) ou para despesas financeiras (juros e pagamento da dívida). Apenas cinco porcento podem ser alocados discricionariamente pelo governo.

A tabela 1 traz os dados das despesas empenhadas pela União entre 2015 e 2022 detalhado por identificador de resultado primário.

```{r}
datatable(indicador_eof  %>% 
  group_by( tipo, ano_lancamento) %>% 
  summarise(despesas_empenhadas = sum(despesas_empenhadas)/1000000000) %>% pivot_wider(names_from = ano_lancamento, values_from = despesas_empenhadas), options = list(
  language =
  list(url = '//cdn.datatables.net/plug-ins/1.10.11/i18n/Portuguese.json'),  
  pageLength = 10),
  caption = 'Tabela 1. Despesa Empenhada por Identificador de Resultado Primário (2015 a 2022 em R$ Bi)')%>%
  formatCurrency(c(2:9), '', mark = ".",digits = 1,  dec.mark = ",") 
```

O Gráfico 1 detalha apenas as emendas parlamentares. A partir de 2020 surge a Emenda Parlamentar de Relator que alimentou a narrativa sobre o Orçamento Secreto.

```{r}

p <- indicador_eof %>% filter(codigo >5 ) %>% 
  group_by(ano_lancamento, tipo) %>%
  summarise(despesas_empenhadas = sum(despesas_empenhadas/1000000000 )) %>%
  arrange(despesas_empenhadas) %>% 
  ggplot()+ 
    geom_col(aes(x=ano_lancamento, y=despesas_empenhadas, fill = tipo)) +
    ggtitle("Gráfico 1. Emendas Parlamentares: Despesa Empenhada (2015 a 2022)")+
    labs(y = "R$ Bi", x = "ano lançamento")+
  theme_classic()
  


ggplotly(p+ theme(legend.title = element_text(colour="white", size=10, 
                                      face="italic")))




```

### Discricionariedade da Despesa

O advento das emendas parlamentares restringiu a discricionariedade do Poder Executivo. O orçamento destina, aproximadamente, apenas cinco porcento do total das despesas para serem utilizadas livremente pelo governante. Contudo, agora o Congresso controla/indica a destinação de parte dos recursos discricionários.

A tabela 2 aponta que em 2022 apenas 3,7% do orçamento esteve sob a discricionariedade do Poder Executivo.

```{r}
datatable( cbind(aggregate(despesas_empenhadas/1000000000 ~ discricionario, indicador_eof %>% filter(ano_lancamento == 2022), sum),aggregate(despesas_empenhadas ~ discricionario, indicador_eof %>% filter(ano_lancamento == 2022) , sum) %>% summarise(percentual = despesas_empenhadas/sum(despesas_empenhadas))), colnames=c("Discricionariedade", "Valor Pago em R$ Bi", "Percentual")  ,
 options = list(language =list(url = '//cdn.datatables.net/plug-ins/1.10.11/i18n/Portuguese.json'), pageLength = 10),
  caption = 'Tabela 2. Discricionariedade do Orçamento: valores empenhados em 2022')%>%
  formatCurrency(2, '', mark = ".",
  digits = 1,  dec.mark = ",")%>%
  formatPercentage(3,digits = 1,
  interval = 3,
  mark = ",",
  dec.mark = getOption("OutDec"),
  zero.print = NULL,
  rows = NULL)

```

O Gráfico 2 apresenta o avanço das emendas parlamentares sobre a discricionariedade do Poder Executivo.

```{r}
p <- indicador_eof %>% filter(codigo %in% c(2,6,7,8,9)) %>% 
  group_by(ano_lancamento, discricionario) %>%
  summarise(despesas_empenhadas = sum(despesas_empenhadas/1000000000 )) %>%
  arrange(despesas_empenhadas) %>% 
  ggplot()+ 
    geom_col(aes(x=ano_lancamento, y=despesas_empenhadas, fill = discricionario)) +
    ggtitle("Gráfico 2. Emendas Parlamentares: Despesa Empenhada (2015 a 2022)")+
    labs(y = "R$ Bi", x = "ano lançamento")+
  theme_classic()
  


ggplotly(p+ theme(legend.title = element_text(colour="white", size=10, 
                                      face="italic")))

```

## Emendas Parlamentares

### Destinação das Emendas Parlamentares

De acordo com a Tabela 3 e a Tabela 4, as emendas parlamentares são destinadas prioritariamente a outros entes da federação (via subvenções e auxílios) para serem aplicadas na função saúde e urbanismo.

```{r}
datatable(eof_elemento %>%
 group_by(elemento_despesa_nome) %>%
 summarise(pago = sum(pagamentos_totais_exercicio_e_rap,na.rm = TRUE)/1000000000) %>% arrange(-pago), colnames=c("Elemento da Despesa", "Valor Pago em R$ Bi"),
 options = list(language = list(url = '//cdn.datatables.net/plug-ins/1.10.11/i18n/Portuguese.json'),pageLength = 10),
  caption = 'Tabela 3. Emendas Parlamentares: valores pagos por elemento da despesa de 2015 a 2022')%>%
  formatCurrency(2, '', mark = ".",
  digits = 1,  dec.mark = ",")





```

```{r}

datatable(eof_elemento %>%
 group_by(funcao_governo_nome) %>%
 summarise(pago =sum(pagamentos_totais_exercicio_e_rap,na.rm = TRUE)/1000000000) %>% arrange(-pago), colnames=c("Função", "Valor Pago em R$ Bi"),
 options = list(language =list(url = '//cdn.datatables.net/plug-ins/1.10.11/i18n/Portuguese.json'), pageLength = 10),
  caption = 'Tabela 4. Emendas Parlamentares: valores pagos por função de 2015 a 2022')%>%
  formatCurrency(2, '', mark = ".",
  digits = 1,  dec.mark = ",")

```

### Defasagem das Emendas Parlamentares

Aplicamos o teste da defasagem nas despesas com emendas parlamentares para verificar se as despesas com obras ou equipamentos (despesas de capital) apresentam uma defasagem temporal maior que as demais despesas. Como esperado, conforme as tabelas e Gráfico abaixo, a defasagem é maior nas despesas com obras ou equipamento.

```{r}

todos <- eof_elemento  %>%
  group_by(ano_lancamento,defasagem) %>%
  summarise(pagamentos = sum(pagamentos_totais_exercicio_e_rap)/1000000000 )

sem_def_todos <- sum(todos %>% filter(defasagem == "sem defasagem") %>% select(pagamentos))

soma_todos<- sum(todos  %>% select(pagamentos))

per_def_todos <- sem_def_todos/soma_todos*100

p <- todos  %>%  
  ggplot()+ 
  geom_col(aes(x= as_date( paste0( ano_lancamento,"01-01" )), y=pagamentos, fill = (defasagem)))+
    scale_fill_manual(values = c("lightgray","lightblue",  "darkblue",  "red"))+
  labs(y = "saldo em R$ Bi", x = "ano lançamento")+
  theme_classic()

ggplotly(p+ theme(legend.title = element_text(colour="white", size=10, 
                                      face="italic")))%>%
  layout(title = list(text = paste0('<br>',
                                    'Gráfico 2. Emendas Parlamentares',
                                    '<br>',
                                    '<sup>',
                                     'Pagamentos Totais de 2015 a 2022','</sup>')))



```

```{r}

datatable( cbind(aggregate(pagamentos ~ defasagem, todos, sum),aggregate(pagamentos ~ defasagem, todos, sum) %>% summarise(percentual = pagamentos/sum(pagamentos))), colnames=c("Defasagem", "Valor Pago em R$ Bi", "Percentual")  ,
 options = list(language =list(url = '//cdn.datatables.net/plug-ins/1.10.11/i18n/Portuguese.json'), pageLength = 10),
  caption = 'Tabela 5. Emendas Parlamentares: Pagamentos Totais de 2015 a 2022')%>%
  formatCurrency(2, '', mark = ".",
  digits = 1,  dec.mark = ",")%>%
  formatPercentage(3,digits = 1,
  interval = 3,
  mark = ",",
  dec.mark = getOption("OutDec"),
  zero.print = NULL,
  rows = NULL)

```

```{r}

invest <- eof_elemento %>% filter(elemento_despesa_codigo %in% c(51,52))  %>%  group_by(ano_lancamento,defasagem) %>% summarise(pagamentos = sum(pagamentos_totais_exercicio_e_rap)/1000000000)
p <- invest %>%  
  ggplot()+ 
  geom_col(aes(x= as_date( paste0( ano_lancamento,"01-01" )), y=pagamentos, fill =( defasagem)))+
    scale_fill_manual(values = c("lightgray","lightblue",  "darkblue",  "red"))+
  labs(y = "saldo em R$ Bi", x = "ano lançamento")+
  theme_classic()

ggplotly(p+ theme(legend.title = element_text(colour="white", size=10, 
                                      face="italic")))%>%
  layout(title = list(text = paste0('<br>',
                                   'Gráfico 3. Emendas Parlamentares (obras ou equipamentos)',
                                    '<br>',
                                    '<sup>',
                                     'Pagamentos Totais de 2015 a 2022','</sup>')))
```

```{r}



datatable( cbind(aggregate(pagamentos ~ defasagem, invest, sum),aggregate(pagamentos ~ defasagem, invest, sum) %>% summarise(percentual = pagamentos/sum(pagamentos))), colnames=c("Defasagem", "Valor Pago em R$ Bi", "Percentual")   ,
 options = list(language =list(url = '//cdn.datatables.net/plug-ins/1.10.11/i18n/Portuguese.json'), pageLength = 10),
  caption = 'Tabela 6. Emendas Parlamentares (obras ou equipamentos): Pagamentos Totais de 2015 a 2022')%>%
  formatCurrency(2, '', mark = ".",
  digits = 1,  dec.mark = ",")%>%
  formatPercentage(3,digits = 1,
  interval = 3,
  mark = ",",
  dec.mark = getOption("OutDec"),
  zero.print = NULL,
  rows = NULL) 
```

## Conclusão

O debate sobre emendas parlamentares e orçamento secreto deve se tornar mais acirrado a medida que aumentar a rigidez orçamentária. Para saber como estão sendo aplicadas as emendas parlamentares de 2023, acesso o app: <https://andreferrari.shinyapps.io/emendas_2023/>
